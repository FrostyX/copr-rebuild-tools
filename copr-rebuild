#!/usr/bin/python

from __future__ import print_function

import os
import datetime
import backends
from copr_rebuild_tools import config
from copr_rebuild_tools import Query, CoprQuery
from copr_rebuild_tools.copr_backend import package_version
from copr_rebuild_tools.args import parser
from ConfigParser import NoSectionError


class Actions(object):
    def action_submit(self):
        query = Query(backend.get_all())

        if conf["set"]:
            with open(os.path.join(os.path.dirname(args.config), conf["set"]), "r") as f:
                query = query.values(f.read().split("\n")[:-1], key="name")

        if args.new_packages or args.new_versions:
            packages = CoprQuery(copr_backend.get_all()).successful().get()

            if args.new_packages:
                query = query.unsucessful(packages)

            if args.new_versions:
                query = query.newer({package.name: package_version(package) for package in packages})

        query = query.offset(args.previous).limit(args.limit)
        copr_backend.submit_all(query.get(), sleep=conf["sleep"],
                                callback=lambda p: print("Submitting package: {}".format(p.name)))

    def action_successful(self):
        cquery = CoprQuery(copr_backend.get_all()).successful()
        for package in cquery.get():
            print(package.name)

    def action_stats(self):
        cquery = CoprQuery(copr_backend.get_all())
        packages = len(cquery.get())
        succeeded = len(cquery.successful().get())

        last_package = cquery.get()[-1]
        last_build = last_package.client.get_build_details(last_package.latest_succeeded_build["id"])
        last_build_time = datetime.datetime.fromtimestamp(last_build.started_on).strftime('%Y-%m-%d')

        print("Project: {}".format(copr_backend.copr_full_name))
        print("Copr config: {}".format(copr_backend.copr_config))
        print("Total packages: {}".format(packages))
        print("Succeeded packages: {0} ({1:.1f}%)".format(succeeded, float(succeeded) / packages * 100))
        print("Last update: {}".format(last_build_time))


args = conf = None
try:
    args = parser.parse_args()
    conf = config.read(args.config, args.backend)

    factory = backends.get(backends.name(args, conf))
    backend = factory[0]()
    copr_backend = factory[1](conf)

    actions = Actions()
    getattr(actions, args.func)()


except NoSectionError:
    print("No section [{}] in {} config".format(args.backend, args.config))

except backends.NoSuchBackend:
    print("No such backend: {}".format(backends.name(args, conf)))

except NotImplementedError:
    print("Backend {} is not implemented correctly".format(backends.name(args, conf)))

except KeyboardInterrupt:
    pass
